
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

import threading
import time
from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage

import numpy
import pyaudio

BITRATE = 96000                                     # change to 44100 if performance issues
def sinOsc(frequency, duration, amplitude=.5):      # 50% volume
    nframes = duration * BITRATE
    frames = numpy.arange(nframes)
    frame_frequency = frequency / BITRATE
    val = amplitude * numpy.sin(frames * frame_frequency * 2.0 * numpy.pi)
    return val.astype(dtype=numpy.float32)

pa = pyaudio.PyAudio()
stream = pa.open(format=pyaudio.paFloat32, channels=2, rate=BITRATE, output=True)
signal_left = 0
signal_right = 0

RESET = False

def generate_delta05():
    """BUGGY!"""
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=60.0, duration=1.0)
    signal_right = sinOsc(frequency=60.5, duration=1.0)
    play_beat()
    RESET = True

def generate_delta2():
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=60.0, duration=1.0)
    signal_right = sinOsc(frequency=62, duration=1.0)
    play_beat()
    RESET = True

def generate_delta1():
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=60.0, duration=1.0)
    signal_right = sinOsc(frequency=61, duration=1.0)
    play_beat()
    RESET = True

def generate_theta3():
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=60.0, duration=1.0)
    signal_right = sinOsc(frequency=63, duration=1.0)
    play_beat()
    RESET = True

def generate_theta4():
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=60.0, duration=1.0)
    signal_right = sinOsc(frequency=64, duration=1.0)
    play_beat()
    RESET = True

def generate_theta5():
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=60.0, duration=1.0)
    signal_right = sinOsc(frequency=65, duration=1.0)
    play_beat()
    RESET = True

def generate_theta6():
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=60.0, duration=1.0)
    signal_right = sinOsc(frequency=66, duration=1.0)
    play_beat()
    RESET = True

def generate_alpha12():
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=70.0, duration=1.0)
    signal_right = sinOsc(frequency=82.0, duration=1.0)
    play_beat()
    RESET = True

def generate_alpha11():
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=70.0, duration=1.0)
    signal_right = sinOsc(frequency=81.0, duration=1.0)
    play_beat()
    RESET = True

def generate_alpha10():
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=70.0, duration=1.0)
    signal_right = sinOsc(frequency=80.0, duration=1.0)
    play_beat()
    RESET = True

def generate_alpha9():
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=70.0, duration=1.0)
    signal_right = sinOsc(frequency=79.0, duration=1.0)
    play_beat()
    RESET = True

def generate_alpha8():
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=70.0, duration=1.0)
    signal_right = sinOsc(frequency=78.0, duration=1.0)
    play_beat()
    RESET = True

def generate_alpha7():
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=70.0, duration=1.0)
    signal_right = sinOsc(frequency=77.0, duration=1.0)
    play_beat()
    RESET = True

def generate_beta13():
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=80.0, duration=1.0)
    signal_right = sinOsc(frequency=93.0, duration=1.0)
    play_beat()
    RESET = True

def generate_beta14():
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=80.0, duration=1.0)
    signal_right = sinOsc(frequency=94.0, duration=1.0)
    play_beat()
    RESET = True

def generate_beta15():
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=80.0, duration=1.0)
    signal_right = sinOsc(frequency=91.0, duration=1.0)
    play_beat()
    RESET = True

def generate_beta16():
    global signal_right
    global signal_left
    global RESET
    signal_left = sinOsc(frequency=80.0, duration=1.0)
    signal_right = sinOsc(frequency=96.0, duration=1.0)
    play_beat()
    RESET = True


def play_beat():
    global signal_right
    global signal_left
    global RESET
    def thread_play():
        global RESET
        stereo_signal = numpy.ravel(numpy.column_stack((signal_left, signal_right)))
        while RESET == True:
            stream.write(stereo_signal.tobytes())
        #stream.stop_stream()
        #stream.close()
        #pa.terminate()

    if RESET == False:
        RESET = True
        threading.Thread(target=thread_play).start()
    else:
        RESET = False
        time.sleep(1)
        threading.Thread(target=thread_play).start()


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("1280x720")
window.configure(bg = "#FFFFFF")


canvas = Canvas(window,bg = "#FFFFFF",height = 720,width = 1280,bd = 0,highlightthickness = 0,relief = "ridge")

canvas.place(x = 0, y = 0)
canvas.create_text(387.0,23.0, anchor="nw",    fill="#000000",font=("Roboto", 48 * -1), text="Binaural Beat Generator",)

# Alpha 11HZ
button_image_alpha_11 = PhotoImage(file=relative_to_assets("button_alpha_11.png"))
button_alpha_11 = Button(image=button_image_alpha_11,borderwidth=0,highlightthickness=0,command=generate_alpha11,relief="flat")
button_alpha_11.place(x=121.0,y=304.0,width=281.0,height=38.0)

button_image_alpha_10 = PhotoImage(file=relative_to_assets("button_alpha_10.png"))
button_alpha_10 = Button(image=button_image_alpha_10,borderwidth=0,highlightthickness=0,command=generate_alpha10,relief="flat")
button_alpha_10.place(x=121.0,y=364.0,width=281.0,height=38.0)

button_image_alpha_12 = PhotoImage(file=relative_to_assets("button_alpha_12.png"))
button_alpha_12 = Button(image=button_image_alpha_12, borderwidth=0, highlightthickness=0, command=generate_alpha12, relief="flat")
button_alpha_12.place(x=121.0, y=244.0, width=281.0, height=38.0)

button_image_delta_05 = PhotoImage(file=relative_to_assets("button_delta_05.png"))
button_delta_05 = Button(image=button_image_delta_05,borderwidth=0,highlightthickness=0,command=generate_delta05,relief="flat")
button_delta_05.place(x=498.0, y=544.0, width=281.0, height=38.0)

button_image_alpha_9 = PhotoImage(file=relative_to_assets("button_alpha_9.png"))
button_alpha_9 = Button(image=button_image_alpha_9,borderwidth=0,highlightthickness=0,command=generate_alpha11,relief="flat")
button_alpha_9.place(x=121.0, y=424.0, width=281.0,height=38.0)

button_image_alpha_8 = PhotoImage(file=relative_to_assets("button_alpha_8.png"))
button_alpha_8 = Button(image=button_image_alpha_8, borderwidth=0, highlightthickness=0, command=generate_alpha8, relief="flat")
button_alpha_8.place(x=121.0, y=484.0, width=281.0, height=38.0)

button_image_alpha_7 = PhotoImage(file=relative_to_assets("button_alpha_7.png"))
button_alpha_7 = Button(image=button_image_alpha_7, borderwidth=0, highlightthickness=0, command=generate_alpha7, relief="flat")
button_alpha_7.place(x=121.0, y=544.0, width=281.0, height=38.0)


# THETA
button_image_theta_6 = PhotoImage(file=relative_to_assets("button_theta_6.png"))
button_theta_6 = Button(image=button_image_theta_6,borderwidth=0,highlightthickness=0,command=generate_theta6,relief="flat")
button_theta_6.place(x=498.0, y=244.0, width=281.0, height=38.0)

button_image_theta_5 = PhotoImage(file=relative_to_assets("button_theta_5.png"))
button_theta_5 = Button(image=button_image_theta_5,borderwidth=0,highlightthickness=0,command=generate_theta5,relief="flat")
button_theta_5.place(x=498.0,y=304.0,width=281.0,height=38.0)

button_image_theta_3 = PhotoImage(file=relative_to_assets("button_theta_3.png"))
button_theta_3 = Button(image=button_image_theta_3,borderwidth=0, highlightthickness=0,command=generate_theta3,relief="flat")
button_theta_3.place(x=498.0,y=364.0,width=281.0,height=38.0)


# DELTA
button_image_delta_1 = PhotoImage(file=relative_to_assets("button_delta_1.png"))
button_delta_1 = Button(image=button_image_delta_1,borderwidth=0,highlightthickness=0,command=generate_delta1,relief="flat")
button_delta_1.place(x=498.0,y=484.0,width=281.0,height=38.0)

button_image_delta_2 = PhotoImage(file=relative_to_assets("button_delta_2.png"))
button_delta_2 = Button(image=button_image_delta_2, borderwidth=0, highlightthickness=0, command=generate_delta2, relief="flat")
button_delta_2.place(x=498.0, y=424.0, width=281.0, height=38.0)


# BETA
button_image_beta_13 = PhotoImage(file=relative_to_assets("button_beta_13.png"))
button_beta_13 = Button(image=button_image_beta_13,borderwidth=0,highlightthickness=0,command=generate_beta13,relief="flat")
button_beta_13.place(x=871.0,y=244.0,width=281.0,height=38.0)

button_image_beta_14 = PhotoImage(file=relative_to_assets("button_beta_14.png"))
button_beta_14 = Button(image=button_image_beta_14,borderwidth=0,highlightthickness=0,command=generate_beta14,relief="flat")
button_beta_14.place(x=871.0,y=304.0,width=281.0,height=38.0)

button_image_beta_15 = PhotoImage(file=relative_to_assets("button_beta_15.png"))
button_beta_15 = Button(image=button_image_beta_15, borderwidth=0, highlightthickness=0, command=generate_beta15, relief="flat")
button_beta_15.place( x=871.0, y=364.0, width=281.0, height=38.0)

button_image_beta_16 = PhotoImage(file=relative_to_assets("button_beta_16.png"))
button_beta_16 = Button(image=button_image_beta_16,borderwidth=0,highlightthickness=0,command=generate_beta16,relief="flat")
button_beta_16.place(x=871.0,y=424.0,width=281.0,height=38.0)


# Descriptions
canvas.create_text(920.0,620,anchor="nw",fill="#000000",font=("Roboto", 16 * -1),
    text="Be careful with beta waves.\nThey can cause anxiety.\nUse these for strong concentration.",)

canvas.create_text(532.0,620.0,anchor="nw",fill="#000000",font=("Roboto", 16 * -1),
    text="Delta recommended for sleep.\nTheta for deep meditation.",)

canvas.create_text(156.0,620.0,anchor="nw",fill="#000000",font=("Roboto", 16 * -1),
    text="Awake but alert. \nUse this for meditation\nand concentrating.",)


# ICONS
image_cup = PhotoImage(file=relative_to_assets("cup.png"))
canvas.create_image(1017.0,177.0,image=image_cup)

image_sleepy = PhotoImage(file=relative_to_assets("sleepy.png"))
canvas.create_image(640.0,177.0,image=image_sleepy)

image_alert = PhotoImage(file=relative_to_assets("alert.png"))
canvas.create_image(263.0, 177.0,image=image_alert)

window.resizable(False, False)
window.mainloop()
